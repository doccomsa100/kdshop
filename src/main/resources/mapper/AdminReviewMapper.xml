<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kd.basic.admin.review.AdminReviewMapper">

	<select id="review_list" resultMap="review_product_repliesdetail_map">
	
		select 
			rt.rev_code, rt.mbsp_id, rt.pro_num, rt.rev_content, rt.rev_rate,rt.rev_date,
		    pt.pro_name, pt.pro_up_folder, pt.pro_img,
		    rrt.reply_id, rrt.manager_id, rrt.reply_text, rrt.reply_date 
		from 
			review_tbl rt
		left outer join 
			product_tbl pt
		on 
			rt.pro_num  = pt.pro_num 
		left outer join 
			review_replies_tbl rrt
		on 
			rt.rev_code = rrt.rev_code
		where	
			rt.rev_code > 0
		
		<include refid="search"></include>	
		<include refid="rev_rate"></include>
		<include refid="rev_content"></include>	
		
		order by rt.rev_date desc	
			
		limit 
			#{cri.pageStart}, #{cri.perPageNum}
			
		
	
	</select>
	
	<resultMap id="review_product_repliesdetail_map" type="com.kd.basic.common.dto.ReviewDTO">
	
		<!--  Review 테이블 구성 -->
		<id property="rev_code" column="rev_code"/>
		<result property="mbsp_id" column="mbsp_id"/>
		<result property="pro_num" column="pro_num"/>	
		<result property="rev_content" column="rev_content"/>
		<result property="rev_rate" column="rev_rate"/>
		<result property="rev_date" column="rev_date"/>
		
		<!-- product 테이블 구성  -->
		<association property="product" javaType="com.kd.basic.common.dto.ProductDTO">
			<result property="pro_name" column="pro_name"/>
			<result property="pro_up_folder" column="pro_up_folder"/>
			<result property="pro_img" column="pro_img"/>
		</association>
		
		<!-- REVIEW_REPLIES_TBL 테이블 구성 -->
		<collection property="replies" ofType="com.kd.basic.common.dto.ReviewReplyDTO">
			<id property="reply_id" column="reply_id"/>
			<result property="manager_id" column="manager_id"/>
			<result property="reply_text" column="reply_text"/>
			<result property="reply_date" column="reply_date"/>
		</collection>
		
	
	</resultMap>
	
	<select id="review_count" resultType="int" parameterType="map">
	
		select 
			count(*)
		from 
			review_tbl rt
		left outer join 
			product_tbl pt
		on 
			rt.pro_num  = pt.pro_num 
		left outer join 
			review_replies_tbl rrt
		on 
			rt.rev_code = rrt.rev_code
		where	
			rt.rev_code > 0
			
		<include refid="search"></include>	
		<include refid="rev_rate"></include>
		<include refid="rev_content"></include>
		
	</select>
	
	<sql id="search">
		<if test="cri.searchType != null and !cri.searchType.equals('')">
			<if test="cri.searchType == 'n'.toString()">
				and pt.pro_name like concat('%', #{cri.keyword} ,'%')
			</if>
			<if test="cri.searchType == 'c'.toString()">
				and pt.pro_num = #{cri.keyword}
			</if>
			<if test="cri.searchType == 'i'.toString()">
				and rt.mbsp_id = #{cri.keyword}
			</if>
		
		</if>
	</sql>
	
	<sql id="rev_rate">
		<if test="rev_rate != null and !rev_rate.equals('')">		 
		  and rt.rev_rate = #{rev_rate}		
		</if>	
	</sql>
	
	<sql id="rev_content">
		<if test="rev_content != null and !rev_content.equals('')">		 
		  and rt.rev_content like concat('%', #{rev_content} ,'%') 		
		</if>
	</sql>
	
	<select id="review_info" resultType="hashmap" parameterType="Integer">
	
		select 
			rt.rev_code, rt.mbsp_id, rt.pro_num, rt.rev_content, rt.rev_rate, rt.rev_date,
			pt.pro_name, pt.pro_up_folder, pt.pro_img
		from 
			review_tbl rt
		inner join 
			product_tbl pt
		on 
			rt.pro_num = pt.pro_num
		where 
			rt.rev_code = #{rev_code}
	</select>
	
	<insert id="reply_insert" parameterType="com.kd.basic.common.dto.ReviewReplyDTO">
	
		insert into 
			review_replies_tbl(rev_code,manager_id,reply_text)
		values
			(#{rev_code}, #{manager_id}, #{reply_text})
	
	</insert>
	
	<update id="reply_modify" parameterType="com.kd.basic.common.dto.ReviewReplyDTO">
	
		update
			review_replies_tbl
		set
			reply_text = #{reply_text},
			reply_date = now()
		where
			reply_id = #{reply_id}		
	
	</update>
	
	<delete id="reply_delete" parameterType="Integer">
	
		delete from
			review_replies_tbl		
		where
			reply_id = #{reply_id}		
	
	</delete>


</mapper>